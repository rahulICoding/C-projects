#include <iostream>
#include <cstring>

using namespace std;

void printBoard(char board[3][3]);
void clearBoard(char board[3][3]);
bool checkWin(char board[3][3], int player);
bool checkTie(char board[3][3]);

int main() {

  char board[3][3];
  char spot[3];

  clearBoard(board);

  char X_MOVE = 'X';
  char O_MOVE = 'O';
  int X_TURN = 0;
  int O_TURN = 1;
  int turn = X_TURN;
  int X_WINS = 0;
  int O_WINS = 0;
  int TIES = 0;
  

  //  board[0][0] = 'X';
  //  board[1][1] = 'O';
  //  board[0][1] = 'X';
  //  board[0][2] = 'X';

  while (checkWin(board, X_MOVE) == false && checkWin(board, O_MOVE) == false && checkTie(board) == true ) {
    if (turn == X_TURN) {
      cout << "X Turn" << endl;
    }
    else {
      cout << "O Turn" << endl;
    }

    printBoard(board);

    cin.get(spot, 3);
    cin.get();

    if (strlen(spot) != 2) {
      cout << "please enter valid move" << endl;
    }
    else if (spot[0] != 'a' && spot[0] != 'b' && spot[0] != 'c') {
      cout << "please enter valid move a,b,c" << endl;
    }
    else if (spot[1] != '1' && spot[1] != '2' && spot[1] != '3') {
      cout << "please enter valid move 1,2,3" << endl;
    }
    else {
      int column = spot[0] - 'a';
      int row = spot[1] - '1';
      if (board[row][column] == ' ') {
	if (turn == X_TURN) {
	  board[row][column] = X_MOVE;
	  turn = O_TURN;
	}
	else {
	  board[row][column] = O_MOVE;
	  turn = X_TURN;
	}
      }
      else {
	cout << "spot is already filled cannot enter here" << endl;
      }
    }

    if (checkWin(board, X_MOVE) == true) {
      X_WINS++;
      cout << "X WIN" << endl;
      cout << "X WINS: " << X_WINS << endl;
      cout << "O WINS: " << O_WINS << endl;
      cout << "TIES: " << TIES << endl;
    }
    
    else if (checkWin(board, O_MOVE) == true) {
      O_WINS++;
      cout << "O WIN" << endl;
      cout << "X WINS: " << X_WINS << endl;
      cout << "O WINS: " << O_WINS << endl;
      cout << "TIES: " << TIES << endl;
    }

    else if (checkTie(board) == false){
      TIES++;
      cout << "X WIN" << endl;
      cout << "X WINS: " << X_WINS << endl;
      cout << "O WINS: " << O_WINS << endl;
      cout << "TIES: " << TIES << endl;
    }
    
  
  }
  
  return 0;
}

void printBoard(char board[3][3]) {

  cout << " 123" << endl;
  cout << 'a' << board[0][0] << board[1][0] << board[2][0] << endl;
  cout << 'b' << board[0][1] << board[1][1] << board[2][1] << endl;
  cout << 'c' << board[0][2] << board[1][2] << board[2][2] << endl;
    
}

void clearBoard(char board[3][3]) {

  for(int row = 0; row < 3; row++) {
    for(int column = 0; column < 3; column++) {
      board[row][column] = ' ';
    }
  }
  
}

bool checkWin(char board[3][3], int player) {
  
  if (board[0][0] == player && board[0][1] == player &&board[0][2] == player){
    return true;
  }
  if (board[1][0] == player && board[1][1] == player &&board[1][2] == player){
    return true;
  }
  if (board[2][0] == player && board[2][1] == player &&board[2][2] == player){
    return true;
  }
  if (board[0][0] == player && board[1][0] == player &&board[2][0] == player){
    return true;
  }
  if (board[0][1] == player && board[1][1] == player &&board[2][1] == player){
    return true;
  }
  if (board[0][2] == player && board[1][2] == player &&board[2][2] == player){
    return true;
  }
  if (board[0][0] == player && board[1][1] == player &&board[2][2] == player){
    return true;
  }
  if (board[0][2] == player && board[1][1] == player &&board[2][0] == player){
    return true;
  }
  return false;
}

bool checkTie(char board[3][3]           ) {
  int count = 0;
  for(int row = 0; row < 3; row++) {
    for(int column = 0; column < 3; column++) {
      if((board[row][column] == 'X') || (board[row][column] == 'O')) {
	count++;
      }
    }
  }
  if (count = 9) {
    return true;
  }
  else {
    return false;
  }
}
